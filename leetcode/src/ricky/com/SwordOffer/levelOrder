package ricky.com.SwordOffer;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;

public class levelOrder {
    /*剑指 Offer 32 - I. 从上到下打印二叉树
    从上到下打印出二叉树的每个节点，同一层的节点按照从左到右的顺序打印。*/
    public class TreeNode {
        int val;
        TreeNode left;
        TreeNode right;

        TreeNode(int x) {
            val = x;
        }
    }

    class Solution {
        public int[] levelOrder(TreeNode root) {
            if (root == null) {
                return new int[0];
            }

            Queue<TreeNode> queue = new LinkedList<>();
            queue.add(root);
            ArrayList<Integer> list = new ArrayList<>();
            while (!queue.isEmpty()) {
                int size = queue.size();
                for (int i = 0; i < size; i++) {
                    TreeNode node = queue.poll();
                    if (node.left != null) {
                        queue.add(node.left);
                    }

                    if (node.right != null) {
                        queue.add(node.right);
                    }

                    list.add(node.val);
                }
            }

            int[] res = new int[list.size()];
            int k = 0;
            for (int i = 0; i < list.size(); i++) {
                res[k++] = list.get(i);
            }

            return res;
        }
    }
}
