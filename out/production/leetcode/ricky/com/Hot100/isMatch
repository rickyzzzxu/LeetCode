package ricky.com.Hot100;

/**
 * @Author xdg
 * @Date 2023/3/15 14:53
 */
public class isMatch {
    /*10. 正则表达式匹配
    给你一个字符串 s 和一个字符规律 p，请你来实现一个支持 '.' 和 '*' 的正则表达式匹配。
    '.' 匹配任意单个字符,'*' 匹配零个或多个前面的那一个元素 ,所谓匹配，是要涵盖 整个字
    符串 s的，而不是部分字符串。*/
    
    class Solution {
        public boolean isMatch(String s, String p) {
            int m = s.length();
            int n = p.length();
            boolean[][] dp = new boolean[m + 1][n + 1];
            dp[0][0] = true;
            for (int j = 2; j <= n; j++) {
                if (p.charAt(j - 1) == '*') {
                    dp[0][j] = dp[0][j - 2];
                }
            }

            for (int i = 1; i <= m; i++) {
                for (int j = 1; j <= n; j++) {
                    if (p.charAt(j - 1) != '*') {
                        if (p.charAt(j - 1) == '.' || s.charAt(i - 1) == p.charAt(j - 1)) {
                            dp[i][j] = dp[i - 1][j - 1];
                        }
                    } else {
                        if (p.charAt(j - 2) != '.' && p.charAt(j - 2) != s.charAt(i - 1)) {
                            dp[i][j] = dp[i][j - 2];
                        } else {
                            dp[i][j] = dp[i][j - 1] || dp[i][j - 2] || dp[i - 1][j];
                        }
                    }
                }
            }

            return dp[m][n];
        }
    }
}
